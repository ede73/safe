Password safe 

Looks great ! https://developer.android.com/studio/test/other-testing-tools/app-crawler

In progress:

TODO:
- Extension: make completely user definable (categories)
    - bonus card etc.number
    - or could security questions (which shouldn't exist!) Be more generic..anything..routing number,checking acct.with copy btn
    - separate entity for security questions (treated like passwords)
- Backup codes - messes up notes
- username and password..often same, in some places separate ( banks!)
    - make a expandable box, where u can enter one detail (shared) or separately the both..
- dynamic folder for old passwords
- not a password checkmark
- allow locking app ,but showing one field..if you want to hand the phone for someone else
- leak check by domain (just general info if site has had security incidents)
- if passkey??
- generic expiration field(+notification x days before)
- add delete photo confirmation 
- Family Passwords / shared passwords
- ellipsis cuts text too eagerly (password list left hand side)

- AutoFill - some support
- Accessibility - everything supports - but it is my responsibility to parse
- Keyboard integration v1 Pre Android 11
- Keyboard integration v2 Post Android 11
- Credentials Manager Api (14+ devices - no one supports)
DONE:
- long name/desc + date overflows
- soft delete (trash) (db done, data model done)
    - UI Deleted category(done)
    - backup ?  (i think yes, since we DO retain them)(done)
    - Preferences? Auto Delete, if SO, then we shall not have deletion time>(done)
    - and auto delete (done) + some test fixes
- implemented with extension mechanism(almost free style):
    - phone numbers - handy when changing numbers
    - payment profile associated (just name,no card details)
        - merged to above: separate field for credit card details?
    - 2fa? Authenticator app? (authenticators)
        - merged to above: login via fb / google

- notify of old passwords



XML

<resources>
  <bool name="enableOnBackInvokedCallback">false</bool>
  <bool name="useFullBackupContent">true</bool>
</resources>
AI-generated code. Review and use carefully. More info on FAQ.
In res/values-v33/bools.xml (for API level 33 and higher):
XML

<resources>
  <bool name="enableOnBackInvokedCallback">true</bool>
</resources>
AI-generated code. Review and use carefully. More info on FAQ.
In res/values-v31/bools.xml (for API level 31 and higher):
XML

<resources>
  <bool name="useFullBackupContent">false</bool>
</resources>
AI-generated code. Review and use carefully. More info on FAQ.
Use Boolean Values in Manifest: Modify your AndroidManifest.xml to use these boolean resources:
XML

<application
  android:enableOnBackInvokedCallback="@bool/enableOnBackInvokedCallback"
  android:fullBackupContent="@xml/backup_rules"
  tools:targetApi="33">
  ...
</application>